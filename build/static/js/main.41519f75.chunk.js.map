{"version":3,"sources":["components/Encryption.js","api/process.js","api/post/createChat.js","api/get/getAllChats.js","api/get/getAllMessage.js","reducer/Slice.js","reducer/userSlice.js","components/chat/chatarea/MessagesContainer.js","assests/typingImg.gif","components/navigation/ChatProfile.js","components/chat/chatarea/ChatArea.js","reducer/UiSlice.js","assests/logo.png","components/navigation/Navigation.js","components/chat/allchat/SingleChat.js","components/navigation/Loader.js","components/chat/allchat/NoChatFound.js","components/chat/allchat/MyChat.js","components/navigation/SearchContainer.js","components/navigation/SearchUser.js","api/get/getAllUsers.js","api/get/Search.js","components/navigation/Profile.js","components/chat/allchat/AllChat.js","components/chat/Chat.js","api/post/sendMessage.js","components/chat/chatarea/Nochat.js","components/chat/ChatLanding.js","assests/search.gif","pages/Login.js","api/post/Login.js","pages/CreateAccount.js","api/post/CreateAccount.js","assests/notFound.png","pages/PageNotFound.js","pages/Home.js","App.js","components/toast/Error.js","store.js","index.js","components/Decryption.js"],"names":["Encryption","message","iv","crypto","randomBytes","key","createHash","update","process","digest","substr","cipher","createCipheriv","Buffer","from","encryptedText","final","toString","getRequest","path","_data","data","localStorage","getItem","JSON","parse","config","headers","Authorization","concat","token","axios","get","postRequest","body","_data2","post","createChat","getAllChats","getMessageApi","id","chatStore","createSlice","name","initialState","isCreateGroup","allChats","allMessages","NoChats","reducers","setNoChats","state","action","payload","setIsCreateGroup","setChatData","addMessage","addNewMessage","_id","chatIndex","findIndex","chat","messages","push","updateLatestMessage","latestMessage","actions","userStore","isLogin","currentChatUser","setIsLogin","setData","setCurrentChatUser","MessagesContainer","_ref","_item$sender","_item$sender2","item","i","currentUser","direction","sender","className","Decryption","content","_jsx","_Fragment","children","style","display","justifyContent","padding","margin","maxWidth","Transition","React","forwardRef","props","ref","Slide","ChatProfile","open","setOpen","current","Dialog","TransitionComponent","keepMounted","onClose","_jsxs","backgroundColor","color","DialogTitle","alignItems","DialogContent","gap","marginBottom","Avatar","src","profilePic","alt","Typography","variant","DialogContentText","email","ChatArea","_props$allMessages","useParams","useState","useSelector","chatContainerRef","useRef","useEffect","scrollTop","scrollHeight","isCopied","setIsCopied","navigate","useNavigate","size","setSize","t","s","Hidden","mdUp","BiArrowBack","onClick","cursor","overflow","textOverflow","whiteSpace","flexGrow","handleCopyToClipboard","linkText","window","location","href","navigator","clipboard","writeText","then","setTimeout","catch","err","console","error","boxShadow","border","borderRadius","FaLink","BsThreeDotsVertical","overflowY","map","userIsTyping","receiveUserTyping","typingImg","height","position","TextField","label","value","onChange","e","isTyping","setMessage","target","length","fullWidth","onKeyPress","sendMessage","InputProps","fontSize","htmlFor","top","left","background","AiOutlineSend","UiStore","loading","setLoading","Navigation","handleOpen","dispatch","useDispatch","flexDirection","Logo","width","AiOutlineSearch","marginLeft","SingleChat","_props$users","_props$latestMessage","chatWithUser","users","find","user","_props$latestMessage2","_props$latestMessage3","fontWeight","Loader","Card","Skeleton","NoChatFound","noChats","FaRocketchat","MyChat","SingleContainer","async","userId","chats","createChatFun","SearchContainer","_ref2","SearchUser","chatUsers","setChatUsers","searching","setSearching","uiStore","search","setSearch","response","fetchData","searchNow","vl","searchData","SearchUserApi","debouncedFetchData","debounce","transform","textAlign","CircularProgress","Drawer","anchor","MdCancel","type","placeholder","Profile","_data3","MdOutlineEdit","removeItem","AiOutlineLogout","AllChat","chatData","socket","Chat","_allChats$find","_allChats$find$users","setReceiveUserTyping","log","setChat","socketIsConnected","setSocketIsConnected","currentUsersMessages","setCurrentUsersMessages","setUserIsTyping","typing","setTyping","setLabel","loginUser","io","emit","on","res","_error$response","_error$response$data","toast","success","msg","_res$data","encrypted","chatId","newMessage","newMessageReceived","_socket","_socket2","room","forEach","element","Promise","resolve","_res$data2","calling","mdDown","encryption","lastTypingTime","Date","getTime","Nochat","ChatLanding","NoChat","Login","setConfig","password","Paper","elevation","Img","onSubmit","preventDefault","_res$data3","duration","jsonString","stringify","setItem","_err$response","required","CreateAccount","PageNotFound","NotFound","Home","pathname","Routes","Route","App","ToastAlert","toasts","useToasterStore","filter","visible","_","dismiss","Toaster","reverseOrder","gutter","containerClassName","containerStyle","toastOptions","theme","primary","secondary","store","configureStore","reducer","Slice","UiSlice","userSlice","ReactDOM","render","BrowserRouter","Provider","document","getElementById","decipher","createDecipheriv","decrypted"],"mappings":"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","file":"static/js/main.41519f75.chunk.js","sourcesContent":["import crypto from 'crypto-browserify';\r\n\r\nconst encryptionKey = process.env.REACT_APP_DECRYPTION_KEY;\r\n\r\nconst Encryption = (message) => {\r\n    \r\n    const iv = crypto.randomBytes(16);\r\n    const key = crypto.createHash('sha256').update(encryptionKey).digest('base64').substr(0, 32);\r\n\r\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key), iv);\r\n    let encryptedText = cipher.update(message, 'utf-8', 'hex');\r\n    encryptedText += cipher.final('hex');\r\n\r\n    return { encryptedText, iv: iv.toString('hex') };\r\n}\r\n\r\nexport { Encryption }","import axios from 'axios'\r\n\r\nconst getRequest =  (path) => {\r\n    var data = localStorage.getItem('loginInfo');\r\n    data = JSON.parse(data);\r\n    \r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${data?.token}`,\r\n        },\r\n    };\r\n\r\n    return axios.get(`http://localhost:4000/api/${path}`,config);\r\n}\r\n\r\nconst postRequest =  (path, body) => {\r\n    var data = localStorage.getItem('loginInfo');\r\n    data = JSON.parse(data);\r\n    \r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${data?.token}`,\r\n        },\r\n    };\r\n\r\n    return axios.post(`http://localhost:4000/api/${path}`,body, config);\r\n}\r\n\r\n\r\nexport {getRequest,postRequest}","import { postRequest } from \"../process\";\r\n\r\nconst createChat = (body) => {\r\n  return postRequest(`chats`,body); \r\n};\r\n\r\nexport { createChat };","import { getRequest } from \"../process\";\r\n\r\nconst getAllChats = () => {\r\n  return getRequest(`chats`); \r\n};\r\n\r\nexport { getAllChats };","import { getRequest } from \"../process\";\r\n\r\nconst getMessageApi = (id) => {\r\n  return getRequest(`messages/${id}`); \r\n};\r\n\r\nexport { getMessageApi };","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst chatStore = createSlice({\r\n    name: \"chatStore\",\r\n    initialState: {\r\n        isCreateGroup: false,\r\n        allChats: [],\r\n        allMessages: [],\r\n        NoChats : false,\r\n    },\r\n    reducers: {\r\n        setNoChats: (state, action) => {\r\n            state.NoChats = action.payload;\r\n        },\r\n        setIsCreateGroup: (state, action) => {\r\n            state.isCreateGroup = action.payload;\r\n        },\r\n        setChatData: (state, action) => {\r\n            state.allChats = action.payload;\r\n        },\r\n        addMessage: (state, action) => {\r\n            state.allMessages = [...state.allMessages, action.payload];\r\n        },\r\n        \r\n        addNewMessage: (state, action) => {\r\n            let { _id, message } = action.payload;\r\n            \r\n            // Find the index of the chat in state.allMessages\r\n            const chatIndex = state.allMessages.findIndex((chat) => chat._id === _id);\r\n          \r\n            if (chatIndex >= 0) {\r\n              // If the chat exists, append the new message to its messages array\r\n              state.allMessages[chatIndex].messages.push(message);\r\n            } else {\r\n              // If the chat doesn't exist, add a new chat object with the message\r\n              state.allMessages.push({ _id: _id, messages: [message] });\r\n            }\r\n        },\r\n       updateLatestMessage: (state, action) => {\r\n            const { _id, message } = action.payload;\r\n            const chatIndex = state.allChats.findIndex((chat) => chat._id === _id);\r\n            state.allChats[chatIndex].latestMessage = message;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setIsCreateGroup,setChatData,addMessage,addNewMessage,setNoChats,updateLatestMessage } = chatStore.actions;\r\n\r\nexport default chatStore.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userStore = createSlice({\r\n    name: \"userStore\",\r\n    initialState: {\r\n        isLogin: false,\r\n        data: null,\r\n        currentChatUser: {},\r\n    },\r\n    reducers: {\r\n        setIsLogin: (state, action) => {\r\n            state.isLogin = action.payload;\r\n        },\r\n        setData: (state, action) => {\r\n            state.data = action.payload;\r\n        },\r\n        setCurrentChatUser: (state, action) => {\r\n            state.currentChatUser = action.payload;\r\n        },\r\n        \r\n    },\r\n});\r\n\r\n\r\n\r\nexport const { setIsLogin, setData, setCurrentChatUser } = userStore.actions;\r\n\r\nexport default userStore.reducer;\r\n","import React from 'react'\r\nimport { Decryption } from '../../Decryption'\r\n\r\n\r\nfunction MessagesContainer({ item, i, currentUser }) {\r\n  let direction = currentUser === item?.sender?._id ? \"flex-end\" : \"flex-start\";\r\n  let className = currentUser === item?.sender?._id ? \"end\" : \"start\";\r\n  const message = Decryption(item?.content,item?.iv)\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", justifyContent: `${direction}` }}>\r\n        <div className={className} style={{ padding: \"8px\", margin: \"4px\", maxWidth: \"50%\" }}>\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MessagesContainer","export default __webpack_public_path__ + \"static/media/typingImg.73518c22.gif\";","import React from 'react'\r\n// import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\n// import DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n// import { useSelector } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\n// import commonData from '../../common-data/Common.json'\r\nimport Typography from '@mui/material/Typography'\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ChatProfile({ open, setOpen, current }) {\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => setOpen(false)}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n\r\n            >\r\n                <div style={{backgroundColor:\"black\",color:\"white\"}}>\r\n                    <DialogTitle style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>{\"Profile\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <div style={{ display:\"flex\" ,alignItems:\"center\",gap:\"8px\",color: \"GrayText\",marginBottom:\"4px\" }}>\r\n                            <Avatar src={current?.profilePic} alt='user' />\r\n                            <Typography variant=\"h6\">{current?.name}</Typography>\r\n                        </div>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{color:\"GrayText\"}}>\r\n                            Email  : {current?.email}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </div>\r\n\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatProfile","import { Avatar, Typography, TextField, Hidden } from '@mui/material'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { AiOutlineSend } from \"react-icons/ai\"\r\nimport MessagesContainer from './MessagesContainer'\r\nimport '../../styles.css'\r\nimport { BiArrowBack } from \"react-icons/bi\"\r\nimport { useSelector } from 'react-redux'\r\nimport typingImg from \"../../../assests/typingImg.gif\"\r\nimport { FaLink } from \"react-icons/fa\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { useRef } from 'react'\r\nimport ChatProfile from '../../navigation/ChatProfile'\r\n\r\n\r\nfunction ChatArea(props) {\r\n  const { id } = useParams();\r\n  const [open, setOpen] = useState(false);\r\n  const currentChatUser = useSelector((state) => state.userStore.currentChatUser);\r\n  const chatContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [props.allMessages]);\r\n\r\n\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  var data = localStorage.getItem('loginInfo');\r\n  data = JSON.parse(data);\r\n  const navigate = useNavigate()\r\n\r\n  const [size, setSize] = useState({\r\n    t: \"16px\",\r\n    s: \"12px\"\r\n  })\r\n\r\n  const handleCopyToClipboard = () => {\r\n\r\n    const linkText = window.location.href; \r\n    navigator.clipboard.writeText(linkText)\r\n      .then(() => {\r\n        setIsCopied(true);\r\n        setTimeout(() => setIsCopied(false), 1500);\r\n      })\r\n      .catch((err) => console.error('Unable to copy to clipboard', err));\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", }} className='chatArea'>\r\n      <div style={{ display: \"flex\", gap: \"12px\", alignItems: \"center\", color: \"grayText\", padding: \"4px\" }} className='chatAreaOne'>\r\n        <Hidden mdUp>\r\n          <div>\r\n            <BiArrowBack onClick={() => navigate(\"/\")} style={{cursor:\"pointer\"}}/>\r\n          </div>\r\n        </Hidden>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\", cursor: \"pointer\",overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\",maxWidth:\"50%\" }}  >\r\n          <Avatar src={currentChatUser?.profilePic} alt='name' />\r\n          <Typography variant=\"body1\" >{currentChatUser?.name}</Typography>\r\n        </div>\r\n        <div style={{ flexGrow: \"1\" }}></div>\r\n        <button onClick={() => handleCopyToClipboard()}>\r\n          <div style={{ backgroundColor: \"white\", padding: \"8px\", boxShadow: \"0px px 2px 0px gray\", border: \"1px solid gray\", borderRadius: \"50%\" }}>\r\n            <FaLink />\r\n          </div>\r\n        </button>\r\n        <button onClick={()=>setOpen(!open)}>\r\n          <div style={{ backgroundColor: \"white\", padding: \"8px\", boxShadow: \"0px px 2px 0px gray\", border: \"1px solid gray\", borderRadius: \"50%\" }}>\r\n            <BsThreeDotsVertical />\r\n            <ChatProfile open={open} setOpen={setOpen} current={currentChatUser} />\r\n          </div>\r\n        </button>\r\n        {isCopied && <div className=\"popup\"> <FaLink /> Copied to clipboard!</div>}\r\n      </div>\r\n\r\n      <hr />\r\n      <div style={{ overflowY: \"scroll\" }} className='chatAreaTwo' ref={chatContainerRef}>\r\n      {props?.allMessages?.map((item, i) => (\r\n        <MessagesContainer item={item} key={i} currentUser={data?.id} />\r\n      ))}\r\n      {props?.userIsTyping && id === props?.receiveUserTyping && (\r\n        <div style={{ display: \"flex\", justifyContent: `flex-start` }}>\r\n          <img src={typingImg} alt=\"\" style={{ height: \"40px\" }} />\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n      <div style={{ position: 'relative', display: \"flex\", gap: \"8px\", alignItems: \"center\", padding: \"8px\" }} className='chatAreaThree'>\r\n        <TextField\r\n          id=\"chatValue\"\r\n          label=\"\"\r\n          value={props?.message}\r\n          onChange={(e) => { props?.isTyping(); props?.setMessage(e.target.value); if (e.target.value.length > 0) setSize({ t: \"8px\", s: \"10px\" }); else setSize({ t: \"16px\", s: \"12px\" }) }}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={() => { setSize({ t: \"8px\", s: \"10px\" }) }}\r\n          // on enter message send\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter')\r\n              props?.sendMessage();\r\n          }}\r\n          InputProps={{\r\n            style: {\r\n              fontSize: '12px', // You can adjust the font size as needed\r\n            },\r\n          }}\r\n        />\r\n\r\n        <label\r\n          htmlFor=\"chatValue\"\r\n          style={{\r\n            position: 'absolute',\r\n            top: size?.t, // Adjust the positioning as needed\r\n            left: '10px', // Adjust the positioning as needed\r\n            fontSize: size?.s, // You can adjust the font size as needed\r\n            background: 'white', // You can change the background color as needed\r\n            padding: '0 4px', // Adjust padding as needed\r\n          }}\r\n        >\r\n          {props?.label}\r\n        </label>\r\n        <AiOutlineSend style={{ fontSize: \"20px\", cursor: \"pointer\" }} onClick={() => props?.sendMessage()} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatArea","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst UiStore = createSlice({\r\n    name: \"UiStore\",\r\n    initialState: {\r\n        open: false,\r\n        loading: false,\r\n    },\r\n    reducers: {\r\n        setOpen(state, action) {\r\n            state.open = action.payload;\r\n        },\r\n        setLoading(state, action) {\r\n            state.loading = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setOpen,setLoading } = UiStore.actions;\r\n\r\nexport default UiStore.reducer;\r\n","export default __webpack_public_path__ + \"static/media/logo.ccc8ea01.png\";","import React from 'react'\r\nimport { Avatar } from '@mui/material'\r\nimport { AiOutlineSearch } from \"react-icons/ai\"\r\nimport { setOpen } from '../../reducer/UiSlice'\r\nimport { useDispatch } from 'react-redux'\r\nimport Logo from '../../assests/logo.png'\r\n\r\n\r\nfunction Navigation({ handleOpen }) {\r\n  const dispatch = useDispatch()\r\n  var data = localStorage.getItem('loginInfo');\r\n  data = JSON.parse(data);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", padding: \"8px\",height:\"20%\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n          <img src={Logo} alt=\"logo\" style={{ width: \"100px\" }} />\r\n          <Avatar style={{ cursor: \"pointer\", border:\"2px solid white\" }} src={data?.profilePic} alt='user' onClick={handleOpen} />\r\n        </div>\r\n        <button onClick={() => { dispatch(setOpen(true)) }} style={{ display: \"flex\", gap: \"8px\", backgroundColor: \"white\", alignItems: \"center\", height: \"50px\" }}>\r\n          <AiOutlineSearch style={{ marginLeft: \"8px\", }} />\r\n          <p style={{}}>Search...</p>\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Avatar } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { setOpen } from '../../../reducer/UiSlice'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Decryption } from '../../Decryption'\r\n\r\nfunction SingleChat({ props }) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    var data = localStorage.getItem('loginInfo');\r\n    data = JSON.parse(data);\r\n\r\n    const chatWithUser = props?.users?.find((user) => user?._id !== data?.id);\r\n    let message = \"\"\r\n    if (props?.latestMessage?.content) {\r\n        message = Decryption(props?.latestMessage?.content, props?.latestMessage?.iv)\r\n    }\r\n\r\n    return (\r\n        <button style={{ width: \"100%\" }} onClick={() => { navigate(`/chat/${props?._id}`); dispatch(setOpen(false)) }} key={`${props?._id}`}>\r\n            <div style={{ display: \"flex\", padding: \"10px\", alignItems: \"center\", gap: \"8px\", margin: \"2px\" }} className='chatUserCard'>\r\n                <Avatar src={chatWithUser?.profilePic} alt='img' />\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", alignItems: \"flex-start\" }}>\r\n                    <Typography variant=\"body1\" style={{ color: \"black\", fontSize: \"16px\", fontWeight: \"600\",textOverflow: \"ellipsis\",maxWidth:\"85%\", whiteSpace: \"nowrap\",overflow: \"hidden\" }}>\r\n                        {chatWithUser?.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" style={{ color: \"#3498db\", overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\",maxWidth:\"50%\" }}>\r\n                        {message}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SingleChat","import React from 'react'\r\nimport { Skeleton, Avatar, Card } from '@mui/material'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Card style={{\r\n            padding: \"8px\",\r\n            display: \"flex\",\r\n            gap: \"8px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n            marginBottom: \"8px\",\r\n            borderRadius: \"8px\",\r\n            boxShadow: \"0 0 5px 0px #0000001f\"\r\n        \r\n        }}>\r\n            \r\n                <Skeleton variant=\"circular\">\r\n                    <Avatar />\r\n                </Skeleton>\r\n                <Skeleton variant=\"text\" style={{ width: \"100%\" }} />\r\n\r\n          \r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { FaRocketchat } from \"react-icons/fa\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setOpen } from '../../../reducer/UiSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../../navigation/Loader';\r\n\r\nfunction NoChatFound() {\r\n  const dispatch = useDispatch()\r\n  const noChats = useSelector((state) => state.chatStore.NoChats);\r\n  return (\r\n    <>\r\n      {\r\n        noChats ?\r\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: \"50vh\" }\r\n          } >\r\n            <div style={{ backgroundColor: \"white\", height: \"20vh\", width: \"60%\", borderRadius: \"4px\", position: \"relative\" }} className='noChatFoundContainer'>\r\n              <div style={{ position: \"absolute\", top: \"8px\", left: \"8px\" }}>\r\n                <p >\r\n                  <FaRocketchat />\r\n                </p>\r\n              </div>\r\n              <Typography variant=\"h6\" style={{ fontWeight: \"600\" }}>\r\n                No Chat Found\r\n              </Typography>\r\n              <button className='makeAChat' onClick={() => dispatch(setOpen(true))}>\r\n                Create a chat\r\n              </button>\r\n            </div>\r\n          </div >\r\n          :\r\n          <>\r\n            <Loader />\r\n            <Loader />\r\n            <Loader />\r\n            <Loader />\r\n          </>\r\n\r\n      }\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default NoChatFound","import React from 'react'\r\nimport SingleChat from './SingleChat'\r\nimport NoChatFound from './NoChatFound'\r\nfunction MyChat({ data }) {\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"80%\", gap: \"8px\", overflow: \"scroll\" }} className='myChatContainer'>\r\n      {data.length > 0 ? data.map((item) => <SingleChat props={item} key={item?._id} />) : <NoChatFound />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyChat","import React from 'react'\r\nimport { Avatar, Typography } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setOpen } from '../../reducer/UiSlice'\r\nimport { createChat } from '../../api/post/createChat'\r\nimport { getAllChats } from '../../api/get/getAllChats'\r\nimport { setChatData } from '../../reducer/Slice'\r\nimport { setLoading } from '../../reducer/UiSlice'\r\n\r\n\r\n\r\nconst SingleContainer = ({ props }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const createChatFun = async () => {\r\n    dispatch(setOpen(false));\r\n    dispatch(setLoading(true));\r\n    const { data } = await createChat({ userId: props?._id });\r\n    const chats = await getAllChats();\r\n    dispatch(setChatData(chats?.data));\r\n    dispatch(setLoading(false));\r\n    navigate(`/chat/${data?._id}`);\r\n  }\r\n  return (\r\n    <button style={{ width: \"100%\" }} onClick={()=>{createChatFun()}} key={`${props?._id}`}>\r\n      <div style={{ display: \"flex\", padding: \"10px\", alignItems: \"center\", gap: \"8px\", backgroundColor: \"white\", margin: \"2px\", borderRadius: \"4px\" }}>\r\n        <Avatar src={props?.profilePic} alt='img' />\r\n        <div>\r\n          <Typography variant=\"body1\" style={{color:\"#3498db\"}} >\r\n            {props?.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" style={{ color: \"\" }}>\r\n            {props?.latestMessage?.content}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  )\r\n}\r\nfunction SearchContainer({ data }) {\r\n  return (\r\n    <div>\r\n      {data.map((item) => <SingleContainer key={item?._id} props={item} />)}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchContainer","import React, { useEffect, useState } from 'react'\r\nimport { Drawer, Typography, CircularProgress } from '@mui/material'\r\nimport Loader from './Loader'\r\nimport { setOpen } from '../../reducer/UiSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport \"./styles.css\"\r\nimport SearchContainer from './SearchContainer'\r\nimport { AiOutlineSearch } from \"react-icons/ai\"\r\n// import EndToEnd from './EndToEnd'\r\nimport '../styles.css'\r\nimport { MdCancel } from \"react-icons/md\"\r\nimport { debounce } from 'lodash';\r\nimport { GetAllUsersApi } from '../../api/get/getAllUsers'\r\nimport { SearchUserApi } from '../../api/get/Search'\r\n\r\nfunction SearchUser() {\r\n    const dispatch = useDispatch()\r\n    const [chatUsers, setChatUsers] = useState([])\r\n    const [searching, setSearching] = useState(false)\r\n    const open = useSelector((state) => state.uiStore.open)\r\n    const [search, setSearch] = useState(\"\")\r\n    const loading = useSelector((state) => state.uiStore.loading)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await GetAllUsersApi();\r\n                setChatUsers(response?.data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    const searchNow = async (vl) => {\r\n        let value = vl || ''\r\n        const searchData = await SearchUserApi(value);\r\n        setChatUsers(searchData?.data)\r\n        setSearching(false)\r\n    }\r\n\r\n    const debouncedFetchData = debounce(searchNow, 1500);\r\n    \r\n    return (\r\n        <>\r\n            {loading && (\r\n                <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', textAlign: 'center' }}>\r\n                    <CircularProgress />\r\n                    <p style={{ color: \"black\", fontWeight: \"600\" }}>Creating a chat for you...</p>\r\n                </div>\r\n\r\n            )}\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={open}\r\n                onClose={() => { dispatch(setOpen(false)) }}\r\n            >\r\n                <div style={{ height: \"100vh\", padding: \"8px\", overflow: \"scroll\" }} className='Drawer'>\r\n                    <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\", backgroundColor: \"white\", justifyContent: \"space-between\", padding: \"8px\" }}>\r\n                        <Typography variant=\"h6\" style={{ color: \"#3498db\" }} >\r\n                            Search Contact\r\n                        </Typography>\r\n                        <MdCancel style={{ fontSize: \"30px\", cursor: \"pointer\" }} onClick={() => dispatch(setOpen(false))} />\r\n                    </div>\r\n\r\n                    <div style={{ padding: \"8px\", display: \"flex\", gap: \"8px\", alignItems: \"center\" }}>\r\n                        <AiOutlineSearch style={{ border: \"2px solid gray\", height: \"40px\", width: \"34px\", borderRadius: \"6px 0px 0px 6px\", color: \"gray\", cursor: \"pointer\" }} onClick={searchNow} />\r\n                        <input onChange={(e) => {\r\n                            setSearch(e.target.value);\r\n                            setSearching(true)\r\n                            debouncedFetchData(e.target.value);\r\n                        }} type=\"search\" placeholder='search...' style={{ border: \"1px solid gray\", width: \"100%\", height: \"40px\", padding: \"4px\" }} />\r\n                    </div>\r\n                    <div>\r\n                        {searching\r\n                            ?\r\n                            <>\r\n                                <Loader />\r\n                            </>\r\n                            :\r\n                            <SearchContainer data={chatUsers} />\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchUser","import { getRequest } from \"../process\";\r\n\r\nconst GetAllUsersApi = () => {\r\n  return getRequest(`users/allusers`); \r\n};\r\n\r\nexport { GetAllUsersApi };","import { getRequest } from \"../process\";\r\n\r\nconst SearchUserApi = (value) => {\r\n  return getRequest(`users/search?search=${value}`); \r\n};\r\n\r\nexport { SearchUserApi };","import React from 'react'\r\n// import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\n// import DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n// import { useSelector } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\n// import commonData from '../../common-data/Common.json'\r\nimport Typography from '@mui/material/Typography'\r\nimport { MdOutlineEdit } from \"react-icons/md\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setChatData } from '../../reducer/Slice';\r\nimport { setCurrentChatUser } from '../../reducer/userSlice';\r\nimport { addMessage } from '../../reducer/Slice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Profile({ open, setOpen }) {\r\n    const dispatch = useDispatch();\r\n    var data = localStorage.getItem('loginInfo');\r\n    data = JSON.parse(data);\r\n    const navigate = useNavigate()\r\n    const handleLogout = () => {\r\n        dispatch(setChatData([]));\r\n        dispatch(setCurrentChatUser({}));\r\n        dispatch(addMessage([]));\r\n        localStorage.removeItem('loginInfo');\r\n        navigate('/login')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => setOpen(false)}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n\r\n            >\r\n                <div style={{ backgroundColor: \"black\", color: \"white\" }}>\r\n                    <DialogTitle style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{\"Profile\"}<MdOutlineEdit /></DialogTitle>\r\n                    <DialogContent>\r\n                        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\", color: \"GrayText\", marginBottom: \"4px\" }}>\r\n                            <Avatar src={data?.profilePic} alt='user' />\r\n                            <Typography variant=\"h6\">{data?.name}</Typography>\r\n                        </div>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\" style={{ color: \"GrayText\" }}>\r\n                            Email  : {data?.email}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"8px\", padding: \"8px\", alignItems: \"center\" }}>\r\n                        <button style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }} onClick={() => handleLogout()}>\r\n                            <AiOutlineLogout style={{ cursor: \"pointer\" }} />\r\n                            <Typography variant=\"h6\" style={{ cursor: \"pointer\" }}>Logout</Typography>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react'\r\nimport Navigation from '../../navigation/Navigation'\r\n// import Title from '../../common/Title'\r\nimport MyChat from './MyChat'\r\nimport SearchUser from '../../navigation/SearchUser'\r\nimport Profile from '../../navigation/Profile'\r\n\r\nfunction AllChat({ chatData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n \r\n\r\n  return (\r\n    <div style={{ padding: \"8px\" }} className='AllChat'>\r\n      {/* <Title title={`Let's chat`} size={'60px'} color={\"white\"} /> */}\r\n      <Profile open={open} setOpen={setOpen} />\r\n      <hr style={{ color: \"white\" }} />\r\n      <Navigation handleOpen={handleOpen} />\r\n      <MyChat data={chatData} />\r\n      <SearchUser />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default AllChat","import React, { useState, useEffect } from 'react';\r\nimport { Hidden } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport toast from 'react-hot-toast';\r\nimport { createChat } from '../../api/post/createChat';\r\nimport { getAllChats } from '../../api/get/getAllChats';\r\nimport { getMessageApi } from '../../api/get/getAllMessage';\r\nimport { sendMessageApi } from '../../api/post/sendMessage';\r\nimport {\r\n  useSelector,\r\n  useDispatch\r\n} from 'react-redux';\r\nimport {\r\n  addNewMessage,\r\n  setChatData,\r\n  addMessage,\r\n} from '../../reducer/Slice';\r\nimport { setCurrentChatUser } from '../../reducer/userSlice';\r\nimport ChatArea from './chatarea/ChatArea';\r\nimport AllChat from './allchat/AllChat';\r\nimport '../styles.css';\r\nimport { setNoChats } from '../../reducer/Slice';\r\nimport { updateLatestMessage } from '../../reducer/Slice';\r\nimport { Encryption } from '../Encryption';\r\n\r\n\r\nconst ENDPOINT = 'http://localhost:4000';\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const allChats = useSelector((state) => state.chatStore.allChats);\r\n  const allMessages = useSelector((state) => state.chatStore.allMessages);\r\n  const [receiveUserTyping, setReceiveUserTyping] = useState(\"\");\r\n  console.log(allMessages)\r\n\r\n\r\n  const [chatData, setChat] = useState([]);\r\n  const [socketIsConnected, setSocketIsConnected] = useState(false);\r\n  const [currentUsersMessages, setCurrentUsersMessages] = useState([]);\r\n  const [userIsTyping, setUserIsTyping] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [label, setLabel] = useState('send a message...');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const loginUser = JSON.parse(localStorage.getItem('loginInfo'));\r\n\r\n  const chatWithUser = allChats?.find(\r\n    (chat) => chat?._id === id\r\n  )?.users?.find((user) => user?._id !== loginUser?.id);\r\n\r\n\r\n  useEffect(() => {\r\n    if (id === 'login') return;\r\n    dispatch(setCurrentChatUser(chatWithUser));\r\n  }, [chatWithUser, id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const messages = allMessages?.find((message) => message?._id === id);\r\n    setCurrentUsersMessages(messages?.messages);\r\n  }, [allMessages, id, dispatch]);\r\n\r\n  const data = JSON.parse(localStorage.getItem('loginInfo'));\r\n\r\n  useEffect(() => {\r\n    if (data.id) {\r\n      socket = io(ENDPOINT);\r\n      socket.emit('setup', data.id);\r\n      socket.on('connected', () => {\r\n        setSocketIsConnected(true);\r\n      });\r\n    }\r\n\r\n    const createChatFun = async () => {\r\n      if (id === 'login') return;\r\n      try {\r\n        const { data } = await createChat({ userId: chatWithUser?._id });\r\n        socket.emit('join chat', data?._id);\r\n        const res = await getAllChats();\r\n        dispatch(setNoChats(false));\r\n        dispatch(setChatData(res?.data));\r\n      } catch (error) {\r\n        if (chatData.length === 0) {\r\n          return toast.success('wait for a while...');\r\n        }\r\n        toast.error(error?.response?.data?.msg);\r\n      }\r\n    };\r\n    createChatFun();\r\n  }, [id, chatWithUser?._id, dispatch]);\r\n\r\n  const sendMessage = async encrypted  => {\r\n    try {\r\n      socket.emit('stop typing', id);\r\n      setLabel('sending...');\r\n      setMessage('');\r\n      dispatch(\r\n        addNewMessage({ _id: id, message: { sender: { _id: data?.id }, content: encrypted?.encryptedText,iv : encrypted?.iv } })\r\n      );\r\n      dispatch(updateLatestMessage({ _id: id, message: { sender: { _id: data?.id }, content: encrypted?.encryptedText, iv : encrypted?.iv} }));\r\n      const res = await sendMessageApi({ message: encrypted?.encryptedText, chatId: id, iv : encrypted?.iv });\r\n      socket.emit('new message', res?.data?.newMessage);\r\n      setLabel('send a message...');\r\n\r\n    } catch (error) {\r\n      toast.error('error while sending message');\r\n    }\r\n  };\r\n\r\n  const encryption = () => {\r\n    if(message.length === 0) return;\r\n    let encrypted = Encryption(message);\r\n  \r\n    sendMessage({encryptedText : encrypted?.encryptedText,iv : encrypted?.iv})\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    const handleNewMessage = async (newMessageReceived) => {\r\n     console.log(newMessageReceived,\"new message received\")\r\n      dispatch(\r\n        addNewMessage({\r\n          _id: newMessageReceived.chat,\r\n          message: { sender: { _id: newMessageReceived?.sender }, content: newMessageReceived?.content, iv : newMessageReceived?.iv },\r\n        })\r\n      );\r\n      dispatch(updateLatestMessage({ _id: newMessageReceived.chat, message: { sender: { _id: newMessageReceived?.sender }, content: newMessageReceived?.content, iv : newMessageReceived?.iv } }));\r\n    };\r\n\r\n\r\n    socket.on('message received', handleNewMessage);\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (socketIsConnected === false) return;\r\n    socket?.on('typing', (room) => {\r\n      setReceiveUserTyping(room);\r\n      setUserIsTyping(true);\r\n    });\r\n    socket?.on('stopTy', () => {\r\n      setUserIsTyping(false);\r\n    });\r\n  });\r\n\r\n  const isTyping = () => {\r\n    if (socketIsConnected === false) return;\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit('typing', id);\r\n    }\r\n    const lastTypingTime = new Date().getTime();\r\n    const timerLength = 3000;\r\n    setTimeout(() => {\r\n      const timeNow = new Date().getTime();\r\n      const timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength) {\r\n        socket.emit('stopTy', id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allChats.length > 0) return;\r\n    const calling = async () => {\r\n      const { data } = await getAllChats();\r\n      setChat(data);\r\n      dispatch(setChatData(data));\r\n      data.forEach((element) => {\r\n        const { _id } = element;\r\n        Promise.resolve(getMessageApi(_id)).then((res) => {\r\n          dispatch(addMessage({ messages: res?.data?.messages, _id }));\r\n        });\r\n      });\r\n    };\r\n    calling();\r\n  }, [dispatch, allChats.length]);\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chatMain\">\r\n\r\n        <Hidden mdDown>\r\n          <AllChat chatData={allChats} />\r\n        </Hidden>\r\n        <ChatArea\r\n          allMessages={currentUsersMessages}\r\n          message={message}\r\n          sendMessage={encryption}\r\n          setMessage={setMessage}\r\n          label={label}\r\n          isTyping={isTyping}\r\n          userIsTyping={userIsTyping}\r\n          receiveUserTyping={receiveUserTyping}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { postRequest } from \"../process\";\r\n\r\nconst sendMessageApi = (body) => {\r\n  return postRequest(`messages`,body); \r\n};\r\n\r\nexport { sendMessageApi };","import React from 'react'\r\nimport Logo from '../../../assests/logo.png'\r\n\r\nfunction Nochat() {\r\n  return (\r\n    <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n      <img src={Logo} alt=\"img\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nochat","import React, { useEffect, useState } from 'react'\r\nimport AllChat from './allchat/AllChat'\r\nimport NoChat from './chatarea/Nochat'\r\nimport { Hidden } from '@mui/material'\r\nimport { getAllChats } from '../../api/get/getAllChats'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setChatData, addMessage, setNoChats } from '../../reducer/Slice'\r\nimport { getMessageApi } from '../../api/get/getAllMessage'\r\n\r\n\r\n\r\n\r\n\r\nfunction ChatLanding() {\r\n    const [chatData, setChat] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const allChats = useSelector((state) => state.chatStore.allChats);\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (allChats.length > 0) return;\r\n        const calling = async () => {\r\n            const { data } = await getAllChats()\r\n            if (data.length === 0) {\r\n                dispatch(setNoChats(true))\r\n            } else {\r\n                dispatch(setNoChats(false))\r\n            }\r\n            setChat(data)\r\n            dispatch(setChatData(data))\r\n            data.forEach(element => {\r\n                const { _id } = element;\r\n                Promise.resolve(getMessageApi( _id )).then((res) => {\r\n                    dispatch(addMessage({ messages: res?.data?.messages, _id }));\r\n                })\r\n            });\r\n        }\r\n        calling()\r\n    }, [dispatch,allChats.length])\r\n    \r\n    useEffect(() => {\r\n        setChat(allChats)\r\n    }, [allChats])\r\n\r\n    return (\r\n        <div>\r\n            <div className='chatMain' >\r\n                <AllChat chatData={chatData} />\r\n                <Hidden mdDown> <NoChat /></Hidden>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatLanding","export default __webpack_public_path__ + \"static/media/search.41f9372e.gif\";","import { Typography, Paper } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\nimport Img from \"../assests/search.gif\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setData, setIsLogin } from \"../reducer/userSlice\"\r\nimport { LoginApi } from '../api/post/Login';\r\n\r\n\r\n\r\nfunction Login() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [config, setConfig] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await LoginApi(config);\r\n            toast.success(res?.data?.msg, {\r\n                position: \"top-center\",\r\n                duration: 4000,\r\n            })\r\n            \r\n            var jsonString = JSON.stringify(res?.data?.user);\r\n            localStorage.setItem(\"loginInfo\", jsonString);\r\n            dispatch(setData(res?.data?.user));\r\n            dispatch(setIsLogin(true));\r\n            navigate(\"/\")\r\n        } catch (err) {\r\n            toast.error(err?.response?.data.msg, {\r\n                position: \"top-center\",\r\n                duration: 4000,\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: \"center\", height: '100vh', width: '100%', flexDirection: 'column', gap: '32px' }}>\r\n            <Paper elevation={2} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\", height: \"60vh\", width: \"100%\", maxWidth: \"500px\" }}>\r\n                <img src={Img} alt=\"\" style={{ height: \"80px\" }} />\r\n                <Typography variant=\"h4\" style={{ padding: \"16px\" }}>Login</Typography>\r\n                <form onSubmit={handleLogin} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', width: '100%', gap: '8px' }}>\r\n                    <input onChange={(e) => {\r\n                        setConfig((value) => ({\r\n                            ...value,\r\n                            email: e.target.value\r\n                        }));\r\n                    }}\r\n                        value={config.email}\r\n                        type=\"email\" placeholder=\"Email\" required style={{ height: '40px', maxWidth: '40vh', width: '90%', padding: \"4px\", border: \"1px solid gray\" }} />\r\n                    <input onChange={(e) => {\r\n                        setConfig((value) => ({\r\n                            ...value,\r\n                            password: e.target.value\r\n                        }));\r\n                    }}\r\n                        value={config.password}\r\n                        type=\"password\" placeholder=\"Password\" required style={{ height: '40px', maxWidth: '40vh', width: '90%', padding: \"4px\", border: \"1px solid gray\" }} />\r\n\r\n                    {/* Add the ReCAPTCHA component */}\r\n                    {/* <ReCAPTCHA sitekey=\"YOUR_RECAPTCHA_SITE_KEY\" onChange={handleCaptchaChange} /> */}\r\n\r\n                    <button type=\"submit\" style={{ height: \"40px\", backgroundColor: \"#2fda24\", width: \"80%\", maxWidth: \"30vh\", color: \"white\" }}>Login</button>\r\n                </form>\r\n                <button style={{padding:\"8px\"}} onClick={()=>navigate(\"/create-account\")}>Don't have an account?</button>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { postRequest } from \"../process\";\r\n\r\nconst LoginApi = (body) => {\r\n  return postRequest(`users/login`,body); \r\n};\r\n\r\nexport { LoginApi };","import { Typography, Paper } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\nimport Img from \"../assests/search.gif\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { CreateAccountApi } from '../api/post/CreateAccount';\r\n\r\n\r\nfunction CreateAccount() {\r\n    const navigate = useNavigate()\r\n    const [config, setConfig] = useState({\r\n        name : \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    \r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await CreateAccountApi(config);\r\n            toast.success(res?.data?.msg, {\r\n                position: \"top-center\",\r\n                duration: 4000,\r\n            })\r\n            navigate(\"/login\")\r\n        }catch(err){\r\n            toast.error(err.response.data.msg, {\r\n                position: \"top-center\",\r\n                duration: 4000,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: \"center\", height: '100vh', width: '100%', flexDirection: 'column', gap: '32px' }}>\r\n            <Paper elevation={2} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\", height: \"60vh\", width: \"100%\", maxWidth: \"500px\" }}>\r\n                <img src={Img} alt=\"\" style={{ height: \"80px\" }} />\r\n                <Typography variant=\"h4\" style={{ padding: \"16px\" }}>Create Account</Typography>\r\n                <form onSubmit={handleRegister} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', width: '100%', gap: '8px' }}>\r\n                    <input onChange={(e) => {\r\n                        setConfig((value) => ({\r\n                            ...value,\r\n                            name: e.target.value\r\n                        }));\r\n                    }\r\n                    }\r\n                        value={config.name}\r\n                        type=\"text\" placeholder=\"Name\" required style={{ height: '40px', maxWidth: '40vh', width: '90%', padding: \"4px\", border: \"1px solid gray\" }} />\r\n                    <input onChange={(e) => {\r\n                        setConfig((value) => ({\r\n                            ...value,\r\n                            email: e.target.value\r\n                        }));\r\n                    }}\r\n                        value={config.email}\r\n                        type=\"email\" placeholder=\"Email\" required style={{ height: '40px', maxWidth: '40vh', width: '90%', padding: \"4px\", border: \"1px solid gray\" }} />\r\n                    <input onChange={(e) => {\r\n                        setConfig((value) => ({\r\n                            ...value,\r\n                            password: e.target.value\r\n                        }));\r\n                    }}\r\n                        value={config.password}\r\n                        type=\"password\" placeholder=\"Password\" required style={{ height: '40px', maxWidth: '40vh', width: '90%', padding: \"4px\", border: \"1px solid gray\" }} />\r\n\r\n                    {/* Add the ReCAPTCHA component */}\r\n                    {/* <ReCAPTCHA sitekey=\"YOUR_RECAPTCHA_SITE_KEY\" onChange={handleCaptchaChange} /> */}\r\n\r\n                    <button type=\"submit\" style={{ height: \"40px\", backgroundColor: \"#2fda24\", width: \"80%\", maxWidth: \"30vh\", color: \"white\" }}>Let's Go</button>\r\n                </form>\r\n                <button style={{padding:\"8px\"}} onClick={()=>navigate(\"/login\")}>Already have an account?</button>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateAccount;\r\n","import { postRequest } from \"../process\";\r\n\r\nconst CreateAccountApi = (body) => {\r\n  return postRequest(`users/register`,body); \r\n};\r\n\r\nexport { CreateAccountApi };","export default __webpack_public_path__ + \"static/media/notFound.26199377.png\";","import React from 'react'\r\nimport NotFound from \"../assests/notFound.png\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction PageNotFound() {\r\n    const navigate = useNavigate();\r\n\r\n  return (\r\n      <div style={{display:'flex',alignItems:\"center\",justifyContent:\"center\",height:\"100vh\",width:\"100%\",flexDirection:\"column\"}}>\r\n          <img src={NotFound} alt=\"404\" style={{ height: \"200px\", width: \"400px\", maxWidth: \"90%\" }} />\r\n          <button\r\n                onClick={() => navigate(\"/\")}\r\n                style={{\r\n                    backgroundColor: \"white\",\r\n                    border: \"none\",\r\n                    padding: \"8px\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"bold\",\r\n                    marginLeft: \"8px\"\r\n                }}\r\n          >\r\n              Home\r\n          </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageNotFound","import React, { useEffect } from 'react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport Chat from '../components/chat/Chat';\r\nimport ChatLanding from '../components/chat/ChatLanding';\r\nimport Login from './Login';\r\nimport CreateAccount from './CreateAccount';\r\nimport { useDispatch } from 'react-redux';\r\nimport PageNotFound from './PageNotFound';\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  var data = localStorage.getItem('loginInfo');\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    if (!data && window.location.pathname === \"/create-account\") {\r\n      navigate(\"/create-account\")\r\n    } else if (!data) {\r\n      navigate(\"/login\")\r\n    } \r\n  }, [data, navigate, dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        {\r\n          data ? <>\r\n            <Route path=\"/\" element={<ChatLanding />} />\r\n            <Route path=\"/chat/:id\" element={<Chat />} />\r\n            <Route path=\"/*\" element={<PageNotFound />} />\r\n          </> : <>\r\n            <Route path='/login' element={<Login />} />\r\n            <Route path='/create-account' element={<CreateAccount />} />\r\n\r\n          </>}\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return <><Home /></>;\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect } from 'react'\r\nimport { Toaster, toast, useToasterStore } from 'react-hot-toast'\r\n\r\nfunction ToastAlert() {\r\n\t// limit the maximum number of toasts\r\n\tconst { toasts } = useToasterStore()\r\n\r\n\tconst TOAST_LIMIT = 4\r\n\r\n\tuseEffect(() => {\r\n\t\ttoasts\r\n\t\t\t.filter((t) => t.visible) // Only consider visible toasts\r\n\t\t\t.filter((_, i) => i >= TOAST_LIMIT) // Is toast index over limit?\r\n\t\t\t.forEach((t) => toast.dismiss(t.id)) // Dismiss – Use toast.remove(t.id) for no exit animation\r\n\t}, [toasts])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Toaster\r\n\t\t\t\tposition=\"bottom-left\"\r\n\t\t\t\treverseOrder={false}\r\n\t\t\t\tgutter={8}\r\n\t\t\t\tcontainerClassName=\"\"\r\n\t\t\t\tcontainerStyle={{}}\r\n\t\t\t\ttoastOptions={{\r\n\t\t\t\t\t// Define default options\r\n\t\t\t\t\tclassName: '',\r\n\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tbackground: '#363636',\r\n\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// Default options for specific types\r\n\t\t\t\t\tsuccess: {\r\n\t\t\t\t\t\tduration: 3000,\r\n\t\t\t\t\t\ttheme: {\r\n\t\t\t\t\t\t\tprimary: 'green',\r\n\t\t\t\t\t\t\tsecondary: 'black',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ToastAlert\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport Slice from \"./reducer/Slice\"\r\nimport UiSlice from \"./reducer/UiSlice\"\r\nimport userSlice from \"./reducer/userSlice\"\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        'chatStore': Slice,\r\n        'uiStore': UiSlice,\r\n        'userStore': userSlice,\r\n    }\r\n})\r\n\r\nexport default store","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport ToastAlert from \"./components/toast/Error\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    <ToastAlert />\r\n\r\n  </BrowserRouter>\r\n  , document.getElementById(\"root\")\r\n);","import crypto from 'crypto-browserify';\r\n\r\nconst decryptionKey = process.env.REACT_APP_DECRYPTION_KEY;\r\n\r\nconst Decryption = ( message, iv) => {\r\n  const key = crypto.createHash('sha256').update(decryptionKey).digest('base64').substr(0, 32);\r\n  const decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(key), Buffer.from(iv, 'hex'));\r\n  let decrypted = decipher.update(message, 'hex', 'utf-8');\r\n  decrypted += decipher.final('utf-8');\r\n  return (\r\n    <>\r\n      {decrypted}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Decryption }"],"sourceRoot":""}